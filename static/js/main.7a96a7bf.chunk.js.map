{"version":3,"sources":["utils/puzzle/solver.js","utils/puzzle/sumUniqueHints.js","utils/puzzle/getColumnHints.js","utils/puzzle/getRowHints.js","utils/puzzle/randomPuzzle.js","utils/react/toKey.js","constants/CellState.js","utils/Enum.js","components/HintGroup.js","components/Hints.js","svgs/x.svg","components/GridCell.js","components/Puzzle.js","components/Board.js","App.js","serviceWorker.js","index.js"],"names":["Line","groups","this","gn","length","restLength","Array","fill","i","cells","sure","cur","ansLine","pos","j","realFound","g","ok","checkFinal","rec","k","val","tmp","ans","isFeasible","isModificationFeasible","NonogramSolver","rowHints","columnHints","width","height","matrix","from","rows","map","hint","columns","nonogram","solved","solve","solution","row","col","_","x","y","value","changed","processRows","processColumns","setCells","updateMatrix","getColumn","process","isComplete","solveNonogram","sumUniqueHints","array","hints","count","undefined","push","total","start","getColumnHints","data","reduce","memo","transpose","getRowHints","randomFromRange","min","max","rng","Math","floor","randomPuzzle","cols","num","toKey","values","Error","toString","filter","join","instance","items","key","Object","freeze","keys","UNKNOWN","EMPTY","FILLED","HintGroup","line","numbers","index","classNames","slice","every","v","CellState","isHintSolved","className","Hints","_path","puzzle","type","group","lineData","_extends","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgX","_ref","svgRef","title","titleId","props","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","ref","id","d","ForwardRef","GridCell","column","contents","data-row","data-column","Puzzle","lastCell","cellState","pointerDownHandler","bind","pointerMoveHandler","pointerUpHandler","pointerLeaveHandler","event","preventDefault","pointerType","document","elementFromPoint","clientX","clientY","closest","cell","getCellFromEvent","buttons","answer","dataset","onUpdateAnswer","addEventListener","cellValue","removeEventListener","actionCompleted","rowIndex","colIndex","onPointerDown","onPointerLeave","onTouchEnd","disableTouchAction","onContextMenu","disableContextMenu","renderGridCells","Component","Board","newPuzzle","useState","setAnswer","useEffect","result","a","b","answered","App","generateSolvablePuzzle","seed","Date","now","seedrandom","sizes","c","console","log","setData","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7a96a7bf.chunk.js","sourcesContent":["// A port of the Nonogram solver by fedimser\n// https://fedimser.github.io/nonogram\n// https://github.com/fedimser/fedimser.github.io/blob/master/js/Nonogram.js\n\nclass Line {\n  constructor(groups) {\n    this.groups = groups;\n    this.gn = groups.length;\n\n    if (this.gn > 0) {\n      this.restLength = new Array(this.gn).fill(0)\n      this.restLength[this.gn - 1] = groups[this.gn - 1];\n      for (var i = this.gn - 2; i >= 0; i--) {\n        this.restLength[i] = groups[i] + 1 + this.restLength[i + 1];\n      }\n    }\n  }\n\n  setCells(cells) {\n    this.length = cells.length;\n    this.cells = cells;\n\n    this.sure = new Array(this.length).fill(0)\n    for (var i = 0; i < this.length; i++) {\n      if (this.cells[i] !== 0)\n        this.sure[i] = 1;\n    }\n\n    this.cur = new Array(this.length).fill(0);\n    this.ansLine = new Array(this.length).fill(0);\n  }\n\n  checkFinal(pos) {\n    for (var j = pos; j < this.length; j++)\n      if (this.cells[j] === 1)\n        return;\n\n    for (var i = 0; i < this.length; i++) {\n      if (this.ansLine[i] === 0)\n        this.ansLine[i] = this.cur[i];\n      else if (this.ansLine[i] !== this.cur[i]) {\n        this.ansLine[i] = 2;\n        this.cells[i] = 0; this.sure[i] = 1;\n      }\n    }\n    this.realFound++;\n  }\n\n  rec(g, pos) {\n    if (this.realFound > 0)\n      return;\n\n    if (pos + this.restLength[g] > this.length)\n      return;\n\n    var ok = true;\n    for (var i = pos; i < pos + this.groups[g]; i++) {\n      if (this.cells[i] === -1) {\n        ok = false;\n        break;\n      }\n      this.cur[i] = 1;\n    }\n\n    if (pos + this.groups[g] < this.length && this.cells[pos + this.groups[g]] === 1) {\n      ok = false;\n    }\n\n    if (ok) {\n      if (g === this.gn - 1)\n        this.checkFinal(pos + this.groups[g]);\n      else {\n        for (var j = pos + this.groups[g] + 1; j < this.length; ++j) {\n          this.rec(g + 1, j);\n          if (this.cells[j] === 1)\n            break;\n        }\n      }\n    }\n\n    for (var k = pos; k < pos + this.groups[g]; k++) {\n      this.cur[k] = 0;\n    }\n  }\n\n  isFeasible() {\n    if (this.gn === 0) {\n      for (var i = 0; i < this.length; ++i)\n        if (this.cells[i] === 1)\n          return false;\n      return true;\n    }\n\n    this.realFound = 0;\n    for (var j = 0; j < this.length; ++j) {\n      this.rec(0, j);\n      if (this.cells[j] === 1)\n        break;\n    }\n    return (this.realFound !== 0);\n  }\n\n  isModificationFeasible(pos, val) {\n    if (this.ansLine[pos] === 2 || this.ansLine[pos] === val)\n      return true;\n\n    var tmp = this.cells[pos];\n    this.cells[pos] = val;\n    var ans = this.isFeasible();\n    this.cells[pos] = tmp;\n    return ans;\n  }\n\n  solve() {\n    if (!this.isFeasible())\n      return false;\n\n    for (var i = 0; i < this.length; ++i) {\n      if (this.sure[i] === 1)\n        continue;\n\n      if (!this.isModificationFeasible(i, 1))\n        this.cells[i] = -1;\n      else if (!this.isModificationFeasible(i, -1))\n        this.cells[i] = 1;\n      else\n        this.cells[i] = 0;\n\n      this.sure[i] = 1;\n    }\n\n    return true;\n  }\n}\n\nclass NonogramSolver {\n\n  static solve(rowHints, columnHints) {\n    const nonogram = new NonogramSolver(rowHints, columnHints)\n    const solved = nonogram.solve()\n    return { solved, solution: nonogram.solution() }\n  }\n\n  constructor(rowHints, columnHints) {\n    this.width = columnHints.length;\n    this.height = rowHints.length;\n\n    this.matrix = Array.from({length: this.height}, () => new Array(this.width).fill(0))\n\n    this.rows = rowHints.map((hint) => new Line(hint))\n    this.columns = columnHints.map((hint) => new Line(hint))\n  }\n\n  solution() {\n    // convert -1 to 0, otherwise matrix is 1 or -1, we need 0=empty, 1=filled\n    return this.matrix.map(row => row.map(col => (col === -1) ? 0 : col))\n  }\n\n  getColumn(j) {\n    return Array.from({length: this.height}, (_, i) => this.matrix[i][j]);\n  }\n\n  updateMatrix(x, y, value) {\n    if (this.matrix[x][y] === 0 && value !== 0) {\n      this.matrix[x][y] = value;\n      this.changed = true;\n    }\n  }\n\n  isComplete() {\n    for (var i = 0; i < this.height; i++)\n      for (var j = 0; j < this.width; j++)\n        if (this.matrix[i][j] === 0) return false;\n    return true;\n  }\n\n  process() {\n    do {\n      this.changed = false;\n      this.processRows();\n      this.processColumns();\n    } while (this.changed);\n    return true;\n  }\n\n  processRows() {\n    for (var i = 0; i < this.height; i++) {\n      this.rows[i].setCells(this.matrix[i]);\n      if (!this.rows[i].solve()) return false;\n      for (var j = 0; j < this.width; j++) this.updateMatrix(i, j, this.rows[i].cells[j]);\n    }\n  }\n\n  processColumns() {\n    for (var i = 0; i < this.width; i++) {\n      this.columns[i].setCells(this.getColumn(i));\n      if (!this.columns[i].solve()) return false;\n      for (var j = 0; j < this.height; j++) this.updateMatrix(j, i, this.columns[i].cells[j]);\n    }\n  }\n\n  solve() {\n    if (!this.process()) return false;  // Impossible\n    if (!this.isComplete()) return false;  // Multiple Solutions\n    return true;\n  }\n}\n\nconst solveNonogram = (rowHints, columnHints) => {\n  const { solved, solution } = NonogramSolver.solve(rowHints, columnHints)\n  // console.log(solution)\n  return { solved, solution }\n}\n\nexport { solveNonogram }\n","const sumUniqueHints = (array) => {\n  const hints = [];\n  let count = 0;\n\n  for (let i = 0; i <= array.length; i++) {\n    if (array[i] !== undefined && array[i] === 1) {\n      count++;\n    } else if (count > 0) {\n      hints.push({ total: count, start: i - count, length: count });\n      count = 0;\n    }\n  }\n\n  if (hints.length === 0) {\n    hints.push({ total: count, start: 0, length: array.length });\n  }\n\n  return hints;\n};\n\nexport { sumUniqueHints }\n","import { sumUniqueHints } from './sumUniqueHints'\n\n// Takes a matrix of rows to columns and swaps so its now columns to rows\n//\n// Given the following:\n// [\n//   [ 1, 1, 0 ],\n//   [ 0, 1, 1 ],\n//   [ 1, 1, 0 ]\n// ]\n//\n// Changes to:\n// [\n//   [ 1, 0, 1 ],\n//   [ 1, 1, 1 ],\n//   [ 0, 1, 0 ]\n// ]\n\nconst transpose = (data) => {\n  return data.reduce((memo, row) => row.map((_, i) => [...(memo[i] || []), row[i]] ), [])\n}\n\nconst getColumnHints = (data) => {\n  return transpose(data).map(row => sumUniqueHints(row))\n}\n\nexport { getColumnHints }\n","import { sumUniqueHints } from './sumUniqueHints'\n\nconst getRowHints = (data) => {\n  return (data || []).map(row => sumUniqueHints(row))\n}\n\nexport { getRowHints }\n","function randomFromRange(min, max, rng) { // min and max are included\n  return Math.floor(rng() * (max - min + 1) + min);\n}\n\nfunction randomPuzzle(rng, rows, cols) {\n  return Array.from({length: rows}, () => {\n    let cells = []\n    let num = randomFromRange(1, cols, rng)\n    let value = randomFromRange(0, 1, rng)\n    while (cells.length < cols) {\n      cells.push(...new Array(num).fill(value))\n      value = 1 - value\n      num = randomFromRange(1, cols - cells.length, rng)\n    }\n    return cells\n  })\n}\n\nexport default randomPuzzle;\n","const toKey = (...values) => {\n  if (values.length === 0)\n    throw new Error('At least one argument is required')\n\n  return values\n    .map(value => value.toString())\n    .filter(value => value !== '')\n    .join('_')\n}\n\nexport { toKey }\n","import Enum from \"../utils/Enum\"\n\nclass CellState extends Enum {}\n\nconst instance = new CellState({\n  UNKNOWN: -1,\n  EMPTY: 0,\n  FILLED: 1\n})\n\nexport default instance\n","class Enum {\n  constructor(items) {\n    for (let key in items) {\n      this[key] =  items[key];\n    }\n    Object.freeze(this);\n  }\n\n  keys() {\n    return Object.keys(this);\n  }\n}\n\nexport default Enum\n","import { toKey } from \"../utils/react/toKey\"\nimport CellState from \"../constants/CellState\"\n\nfunction HintGroup({ hints, line }) {\n  const isHintSolved = (hint, line) => {\n    const cells = (line || []).slice(hint.start, hint.start + hint.length)\n    return cells.every((v) => (hint.total === 0 && v === CellState.EMPTY) || v === CellState.FILLED);\n  }\n\n  const numbers = hints.map((hint, index) => {\n    let classNames = [\"hint-num\"]\n\n    if (isHintSolved(hint, line)) {\n      classNames.push(\"text-muted\")\n    }\n\n    return <div className={classNames.join(\" \")} key={toKey(hint, index)}>{hint.total}</div>\n  });\n\n  return <div className=\"hint-cell\">{numbers}</div>\n}\n\nexport default HintGroup;\n","import { toKey } from \"../utils/react/toKey\"\nimport HintGroup from \"./HintGroup\"\n\nfunction Hints({ puzzle, data, className, type }) {\n  const groups = data.map((group, index) => {\n    const lineData = type === \"row\" ? puzzle[index] : puzzle.map((row) => row[index]);\n\n    return <HintGroup hints={group}\n      line={lineData}\n      key={toKey(data, group, index)} />\n  })\n\n  return <div className={`${className}`}>{groups}</div>\n}\n\nexport default Hints\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgX(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 24 24\",\n    width: 24,\n    height: 24,\n    strokeWidth: 3,\n    stroke: \"currentColor\",\n    fill: \"none\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M18 6L6 18M6 6l12 12\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgX);\nexport default __webpack_public_path__ + \"static/media/x.6192b069.svg\";\nexport { ForwardRef as ReactComponent };","import { memo } from \"react\";\nimport { ReactComponent as XIcon } from \"../svgs/x.svg\";\n\nconst GridCell = memo(({value, row, column}) => {\n  const classStates = [ \"crossed\", \"filled\" ]\n  const className = classStates[value] || \"unknown\"\n\n  let contents = \"\"\n  if (className === \"crossed\") {\n    contents = <XIcon />\n  }\n\n  return (\n    <div className={`nonogram-cell ${className}`}\n      title={`row ${row+1}, column ${column+1}`}\n      data-row={row} data-column={column}>\n      { contents }\n    </div>\n  )\n})\n\nexport default GridCell;\n","import { Component } from 'react';\nimport { toKey } from '../utils/react/toKey';\nimport GridCell from \"./GridCell\"\nimport CellState from \"../constants/CellState\"\n\n// for left mouse click its different on pointermove but right mouse click is the same\n// https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events#Determining_button_states\nconst MAIN_POINTER = 1\nconst RIGHT_MOUSE_POINTER = 2\n\nclass Puzzle extends Component {\n\n  constructor(props) {\n    super(props)\n    this.lastCell = null;\n    this.cellState = null;\n    this.pointerDownHandler = this.pointerDownHandler.bind(this);\n    this.pointerMoveHandler = this.pointerMoveHandler.bind(this);\n    this.pointerUpHandler = this.pointerUpHandler.bind(this);\n    this.pointerLeaveHandler = this.pointerLeaveHandler.bind(this);\n  }\n\n  disableContextMenu(event) {\n    event.preventDefault()\n  }\n\n  // using `touch-action: none;` works but is not enough to prevent a quick double tap to zoom\n  disableTouchAction(event) {\n    event.preventDefault();\n  }\n\n  getCellFromEvent(event) {\n    const target = (event.pointerType === 'mouse') ?\n      event.target :\n      document.elementFromPoint(event.clientX, event.clientY)\n\n    if (target)\n      return target.closest('.nonogram-cell')\n  }\n\n  pointerDownHandler(event) {\n    this.lastCell = null\n    this.cellState = null\n\n    const cell = this.getCellFromEvent(event)\n\n    if (!cell)\n      return;\n\n    this.lastCell = cell\n\n    if (event.buttons === MAIN_POINTER) {\n      if (this.props.answer[cell.dataset.row][cell.dataset.column] === CellState.EMPTY) {\n        this.cellState = CellState.UNKNOWN\n      }\n      else if (this.props.answer[cell.dataset.row][cell.dataset.column] === CellState.FILLED) {\n        this.cellState = CellState.EMPTY\n      }\n      else {\n        this.cellState = CellState.FILLED\n      }\n    }\n    else if (event.buttons === RIGHT_MOUSE_POINTER) {\n      this.cellState = CellState.EMPTY\n    }\n\n    if (this.cellState !== null) {\n      this.props.onUpdateAnswer(cell.dataset.row, cell.dataset.column, this.cellState)\n      document.addEventListener('pointermove', this.pointerMoveHandler)\n      document.addEventListener('pointerup', this.pointerUpHandler)\n    }\n  }\n\n  pointerMoveHandler(event) {\n    const cell = this.getCellFromEvent(event)\n\n    if (!cell || this.lastCell === cell)\n      return;\n\n    const cellValue = this.props.answer[cell.dataset.row][cell.dataset.column]\n    // if update action is to clear/empty and current cell is NOT empty, update it\n    // or if update action is to fill/cross (NOT empty) and current cell is empty, update it\n    if ((this.cellState === CellState.UNKNOWN) || (this.cellState !== CellState.UNKNOWN && cellValue === CellState.UNKNOWN)) {\n      this.props.onUpdateAnswer(cell.dataset.row, cell.dataset.column, this.cellState)\n    }\n\n    this.lastCell = cell\n  }\n\n  pointerUpHandler(event) {\n    document.removeEventListener('pointermove', this.pointerMoveHandler)\n    document.removeEventListener('pointerup', this.pointerUpHandler)\n    this.cellState = null\n    this.lastCell = null\n    this.props.actionCompleted()\n  }\n\n  pointerLeaveHandler(event) {\n    document.removeEventListener('pointermove', this.pointerMoveHandler)\n  }\n\n  renderGridCells() {\n    return this.props.answer.map((row, rowIndex) => {\n      return row.map((value, colIndex) => {\n        return <GridCell value={value} row={rowIndex} column={colIndex}\n                  key={toKey(rowIndex, colIndex)} />\n        }\n      )\n    })\n  }\n\n  render () {\n    return (\n      <div className={`nonogram-grid grid-${this.props.cols}x${this.props.rows}`}\n        onPointerDown={this.pointerDownHandler}\n        onPointerLeave={this.pointerLeaveHandler}\n        onTouchEnd={this.disableTouchAction}\n        onContextMenu={this.disableContextMenu}>\n        {this.renderGridCells()}\n      </div>\n    )\n  }\n}\n\nexport default Puzzle\n","import { useEffect, useState } from 'react';\nimport Hints from \"./Hints\"\nimport Puzzle from \"./Puzzle\"\nimport CellState from \"../constants/CellState\"\n\nfunction Board({ data, rowHints, columnHints, newPuzzle }) {\n  const [answer, setAnswer] = useState([])\n\n  const updateAnswer = (row, column, value) => {\n    answer[row][column] = value\n    setAnswer([...answer])\n  }\n\n  useEffect(() => {\n    let result = Array.from({length: data.length}, () => new Array(data[0].length).fill(CellState.UNKNOWN))\n    // find lines where sum is 0 and cross out each cell\n    for (let i = 0; i < data.length; i++) {\n      const row = data[i]\n      if (row.reduce((a, b) => a + b, 0) === 0) {\n        for (let x = 0; x < row.length; x++) {\n          result[i][x] = CellState.EMPTY\n        }\n      }\n    }\n    for (let i = 0; i < data.length; i++) {\n      const col = data.map((row) => row[i])\n      if (col.reduce((a, b) => a + b, 0) === 0) {\n        for (let x = 0; x < col.length; x++) {\n          result[x][i] = CellState.EMPTY\n        }\n      }\n    }\n    setAnswer(result)\n  }, [data, rowHints, columnHints])\n\n  const answered = () => {\n    for (let i = 0; i < data.length; i++)\n      for (let j = 0; j < data[i].length; j++)\n        if ((data[i][j] === CellState.FILLED && answer[i][j] !== CellState.FILLED) || (data[i][j] !== CellState.FILLED && answer[i][j] === CellState.FILLED))\n          return false\n    return true\n  }\n\n  const actionCompleted = () => {\n    if (answered()) {\n      newPuzzle()\n    }\n  }\n\n  return (\n    <div className=\"disable-text-selection\">\n      <div className=\"full-grid\">\n        <Hints type=\"column\" data={columnHints} puzzle={answer} className=\"column-hints\" />\n        <Hints type=\"row\" data={rowHints} puzzle={answer} className=\"row-hints\" />\n        <Puzzle rows={rowHints.length} cols={columnHints.length}\n          answer={answer} onUpdateAnswer={updateAnswer} actionCompleted={actionCompleted} />\n      </div>\n    </div>\n  )\n}\n\nexport default Board\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport { solveNonogram } from './utils/puzzle/solver';\nimport seedrandom from 'seedrandom';\nimport { getColumnHints } from './utils/puzzle/getColumnHints';\nimport { getRowHints } from './utils/puzzle/getRowHints';\nimport randomPuzzle from \"./utils/puzzle/randomPuzzle\";\nimport Board from \"./components/Board\"\n\nfunction App() {\n  // TODO: create puzzleId from data\n  //\n  // > data.map(row => row.join('')).join(\",\")\n  // > \"11110,11010,11100,10010,10100,11110,11010,11100,10010,10100\"\n  //\n  // which that string can also be parsed back into a 2d array\n  // > string.split(\",\").map(row => row.split('').map(i => Number(i)))\n  const generateSolvablePuzzle = () => {\n    const seed = Date.now().toString(36)\n    const rng = seedrandom(seed)\n\n    const sizes = [ [5, 5], [10, 5], [5, 10], [10, 10] ]\n\n    while (true) {\n      const [rows, columns] = sizes[Math.floor(rng() * sizes.length)]\n      const data = randomPuzzle(rng, rows, columns)\n      const rowHints = getRowHints(data)\n      const columnHints = getColumnHints(data)\n      const nonogram = solveNonogram(rowHints.map((i) => i.map((c) => c.total)), columnHints.map((i) => i.map((c) => c.total)))\n      console.log(`NEW PUZZLE ${columns}x${rows}`, nonogram.solved, nonogram.solution)\n      if (nonogram.solved) {\n        return { seed: seed, puzzle: nonogram.solution, rowHints, columnHints }\n      }\n    }\n  }\n\n  const [data, setData] = useState({seed: \"\", puzzle: [], rowHints: [], columnHints: []})\n\n  useEffect(() => {\n    setData(generateSolvablePuzzle())\n  }, []);\n\n  const newPuzzle = () => {\n    setData(generateSolvablePuzzle())\n  }\n\n  return(\n    <div className=\"app-container\">\n      <Board data={data.puzzle} rowHints={data.rowHints} columnHints={data.columnHints} newPuzzle={newPuzzle} />\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}